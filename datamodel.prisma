enum UserRole {
  APP_MODERATOR
  COMPANY_ADMIN
  COMPANY_MANAGER
}

enum CompanyRole {
  SUPPLIER
  BUYER
}

enum ItemStatus {
  PRIVATE
  PUBLIC
}

enum OrderStatus {
  PENDING
  PROCESSING
  CANCELLED
  DECLINED
  COMPLETED
}

type User {
  id: ID! @id
  email: String! @unique
  password: String!
  firstName: String!
  lastName: String!
  role: [UserRole]! @scalarList(strategy: RELATION)
  phone: String
  country: String
  city: String
  company: Company @relation(name: "UsersInCompany")
  favoriteItems: [Item]
  resetToken: String
  resetTokenExpiry: Float
  verifiedEmail: Boolean! @default(value: false)
  verifiedPhone: Boolean! @default(value: false)
  createdAt: DateTime! @createdAt
  lastSeen: DateTime!
}

type Company {
  id: ID! @id
  owner: User! @relation(name: "CompanyBelongsTo")
  name: String! @unique
  companyRole: [CompanyRole!]! @scalarList(strategy: RELATION)
  country: String
  city: String
  postalCode: Int
  members: [User] @relation(name: "UsersInCompany")
  items: [Item] @relation(onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Item {
  id: ID! @id
  title: String!
  description: String!
  sku: String
  image: [ItemImage]! @relation(onDelete: CASCADE)
  price: Int!
  owner: Company!
  status: ItemStatus! @default(value: PRIVATE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ItemImage {
  id: ID! @id
  item: Item!
  main: String
  thumbnail: String
}

type Order {
  id: ID! @id
  status: OrderStatus!
  items: [OrderItem!]! @relation(onDelete: CASCADE)
  supplier: Company!
  buyer: User!
  totalPrice: Int!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type OrderItem {
  id: ID! @id
  title: String!
  description: String!
  sku: String
  price: Int!
  owner: Company!
  quantity: Int! @default(value: 1)
}

